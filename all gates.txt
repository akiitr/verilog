module mux21(a,b,s0,y);
    input a,b,s0;
    output y;
 assign y=((a&(~s0))|(b&s0));

endmodule
module mux21t_v;

	// Inputs
	reg a;
	reg b;
	reg s0;

	// Outputs
	wire y;

	// Instantiate the Unit Under Test (UUT)
	mux21 uut (
		.a(a), 
		.b(b), 
		.s0(s0), 
		.y(y)
	);

	initial begin
		// Initialize Inputs
		a = 0;
		b = 1;
		s0 = 0;

		#3 a=0;b=1;s0=1;
		#3 a=1; b=0;s0 = 0;
		#3 a=1; b=0;s0=1;
		#3 $stop;


	end
      
endmodule



module mux41(a,b,c,d,y, s0,s1);
    input a,b,c,d;
    output y;
	 wire w1,w2;
    input s0,s1;
	 mux21(a,b,s0,w1);
	 mux21(c,d,s0,w2);
	 mux21(w1,w2,s1,y);


endmodule

module mux41t_v;

	// Inputs
	reg a;
	reg b;
	reg c;
	reg d;
	reg s0;
	reg s1;

	// Outputs
	
	wire y;

	// Instantiate the Unit Under Test (UUT)
	mux41 uut (
		.a(a), 
		.b(b), 
		.c(c), 
		.d(d), 
		.y(y), 
		.s0(s0), 
		.s1(s1)
	);

	initial begin
		// Initialize Inputs
		
      #3 s1=0; s0=0;a = 0;b = 1;c = 1;d = 1;
		#3 s1=0; s0=0;a = 1;b = 0;c = 0;d = 0;
		#3 s1=0; s0=1;a = 1;b = 0;c = 1;d = 1;
		#3 s1=0; s0=1;a = 0;b = 1;c = 0;d = 0;
		#3 s1=1; s0=0;a = 1;b = 1;c = 0;d = 1;
		#3 s1=1; s0=0;a = 0;b = 0;c = 1;d = 0;
		#3 s1=1; s0=1;a = 1;b = 1;c = 1;d = 0;
		#3 s1=1; s0=1;a = 0;b = 0;c = 0;d = 1;
		#3 $stop;


	end
      
endmodule

module demux21(a,s0, y1,y2);
    input a,s0;
    output y1,y2;
assign y1=((~s0)&a);
assign y2=((s0)&a);

endmodule
module demux21t_v;

	// Inputs
	reg a;
	reg s0;

	// Outputs
	wire y1;
	wire y2;

	// Instantiate the Unit Under Test (UUT)
	demux21 uut (
		.a(a), 
		.s0(s0), 
		.y1(y1), 
		.y2(y2)
	);

	initial begin
		// Initialize Inputs
		

		a=1;s0=0;
		#3 a=1;s0=1;
		
		#3 $stop;

	end
      
endmodule

module demux14(a,s0,s1, y1,y2,y3,y4);
    input a,s0,s1;
    output y1,y2,y3,y4;
	 wire w1,w2;
    demux21(a,s0,w1,w2);
	 demux21(w1,s1,y1,y3);
    demux21(w2,s1,y2,y4);
endmodule

module demux41t_v;

	// Inputs
	reg a;
	reg s0;
	reg s1;

	// Outputs
	wire y1;
	wire y2;
	wire y3;
	wire y4;

	// Instantiate the Unit Under Test (UUT)
	demux14 uut (
		.a(a), 
		.s0(s0), 
		.s1(s1), 
		.y1(y1), 
		.y2(y2), 
		.y3(y3), 
		.y4(y4)
	);

	initial begin
		// Initialize Inputs
		a = 0;
		s0 = 0;
		s1 = 0;

	#3 s1=0; s0=0;a = 0;
		#3 s1=0; s0=0;a = 1;
		#3 s1=0; s0=1;a = 1;
		#3 s1=0; s0=1;a = 0;
		#3 s1=1; s0=0;a = 1;
		#3 s1=1; s0=0;a = 0;
		#3 s1=1; s0=1;a = 1;
		#3 s1=1; s0=1;a = 0;

	end
      
endmodule
